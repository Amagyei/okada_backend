# Generated by Django 5.2.1 on 2025-07-09 04:15

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("rides", "0003_ridepathcoordinate"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DriverAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ONLINE", "Online - Available for rides"),
                            ("OFFLINE", "Offline - Not available"),
                            ("BUSY", "Busy - Currently on a ride"),
                            ("BREAK", "On break"),
                            ("MAINTENANCE", "Vehicle maintenance"),
                            ("UNAVAILABLE", "Temporarily unavailable"),
                        ],
                        db_index=True,
                        default="OFFLINE",
                        max_length=20,
                    ),
                ),
                (
                    "current_location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True,
                        help_text="Current GPS location (longitude, latitude)",
                        null=True,
                        srid=4326,
                    ),
                ),
                ("current_address", models.TextField(blank=True, null=True)),
                ("last_location_update", models.DateTimeField(auto_now=True)),
                (
                    "service_area",
                    models.CharField(
                        choices=[
                            ("ACCRA_CENTRAL", "Accra Central"),
                            ("ACCRA_NORTH", "Accra North"),
                            ("ACCRA_WEST", "Accra West"),
                            ("ACCRA_EAST", "Accra East"),
                            ("GREATER_ACCRA", "Greater Accra"),
                            ("CUSTOM", "Custom area"),
                        ],
                        default="ACCRA_CENTRAL",
                        max_length=20,
                    ),
                ),
                (
                    "custom_service_area",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True,
                        help_text="Custom service area polygon (if service_area is CUSTOM)",
                        null=True,
                        srid=4326,
                    ),
                ),
                (
                    "max_distance_km",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        help_text="Maximum distance driver is willing to travel for pickup",
                        max_digits=5,
                    ),
                ),
                (
                    "planned_destination_lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        help_text="Latitude of driver's planned destination",
                        max_digits=16,
                        null=True,
                    ),
                ),
                (
                    "planned_destination_lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        help_text="Longitude of driver's planned destination",
                        max_digits=16,
                        null=True,
                    ),
                ),
                (
                    "planned_destination_address",
                    models.TextField(blank=True, null=True),
                ),
                ("planned_departure_time", models.DateTimeField(blank=True, null=True)),
                ("planned_arrival_time", models.DateTimeField(blank=True, null=True)),
                ("is_available_24_7", models.BooleanField(default=False)),
                ("preferred_start_time", models.TimeField(blank=True, null=True)),
                ("preferred_end_time", models.TimeField(blank=True, null=True)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("total_rides_completed", models.PositiveIntegerField(default=0)),
                (
                    "preferred_ride_types",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of preferred ride types: ['short', 'long', 'airport', etc.]",
                    ),
                ),
                (
                    "minimum_fare_preference",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum fare driver prefers to accept",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_online_at", models.DateTimeField(blank=True, null=True)),
                ("last_offline_at", models.DateTimeField(blank=True, null=True)),
                (
                    "driver",
                    models.OneToOneField(
                        limit_choices_to={"user_type": "driver"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Driver Availability",
                "verbose_name_plural": "Driver Availabilities",
                "ordering": ["-last_location_update"],
                "indexes": [
                    models.Index(
                        fields=["status", "last_location_update"],
                        name="rides_drive_status_5520aa_idx",
                    ),
                    models.Index(
                        fields=["service_area", "status"],
                        name="rides_drive_service_be368d_idx",
                    ),
                    models.Index(
                        fields=["average_rating", "status"],
                        name="rides_drive_average_309c25_idx",
                    ),
                ],
            },
        ),
    ]
